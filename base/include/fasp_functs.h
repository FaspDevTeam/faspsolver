/*! \file  fasp_functs.h
 *
 *  \brief Function decoration for the FASP package
 *
 *---------------------------------------------------------------------------------
 *  Copyright (C) 2008--2018 by the FASP team. All rights reserved.                
 *  Released under the terms of the GNU Lesser General Public License 3.0 or later.
 *---------------------------------------------------------------------------------
 *
 *  \warning DO NOT EDIT!!! This file is automatically generated!
 */ 

#include "fasp.h" 
#include "fasp_block.h" 
#include "fasp_grid.h" 
 

/*-------- In file: AuxArray.c --------*/

void fasp_darray_set (const INT   n,
                      REAL       *x,
                      const REAL  val);

void fasp_iarray_set (const INT   n,
                      INT        *x,
                      const INT   val);

void fasp_darray_cp (const INT    n,
                     const REAL  *x,
                     REAL        *y);

void fasp_iarray_cp (const INT    n,
                     const INT   *x,
                     INT         *y);


/*-------- In file: AuxConvert.c --------*/

unsigned long fasp_aux_change_endian4 (const unsigned long x);

double fasp_aux_change_endian8 (const double x);

double fasp_aux_bbyteToldouble (const unsigned char bytes[]);


/*-------- In file: AuxGivens.c --------*/

void fasp_aux_givens (const REAL      beta,
                      const dCSRmat  *H,
                      dvector        *y,
                      REAL           *work);


/*-------- In file: AuxGraphics.c --------*/

void fasp_dcsr_subplot (const dCSRmat  *A,
                        const char     *filename,
                        INT             size);

void fasp_dcsr_plot (const dCSRmat  *A,
                     const char     *fname);

void fasp_dbsr_subplot (const dBSRmat  *A,
                        const char     *filename,
                        INT             size);

void fasp_dbsr_plot (const dBSRmat  *A,
                     const char     *fname);

void fasp_grid2d_plot (pgrid2d  pg,
                       INT      level);


/*-------- In file: AuxInput.c --------*/

SHORT fasp_param_check (input_param  *inparam);

void fasp_param_input (const char   *fname,
                       input_param  *inparam);


/*-------- In file: AuxMemory.c --------*/

void * fasp_mem_calloc (const LONGLONG  size,
                        const INT       type);

void * fasp_mem_realloc (void           *oldmem,
                         const LONGLONG  tsize);

void fasp_mem_free (void *mem);

void fasp_mem_usage ( void );

SHORT fasp_mem_iludata_check (const ILU_data *iludata);


/*-------- In file: AuxMessage.c --------*/

void fasp_itinfo (const INT   ptrlvl,
                  const INT   stop_type,
                  const INT   iter,
                  const REAL  relres,
                  const REAL  absres,
                  const REAL  factor);

void fasp_amgcomplexity (const AMG_data  *mgl,
                         const SHORT      prtlvl);

void fasp_amgcomplexity_bsr (const AMG_data_bsr  *mgl,
                             const SHORT          prtlvl);

void fasp_cputime (const char  *message,
                   const REAL   cputime);

void fasp_message (const INT    ptrlvl,
                   const char  *message);

void fasp_chkerr (const SHORT  status,
                  const char  *fctname);


/*-------- In file: AuxParam.c --------*/

void fasp_param_set (const int     argc,
                     const char   *argv[],
                     input_param  *iniparam);

void fasp_param_init (const input_param  *iniparam,
                      ITS_param          *itsparam,
                      AMG_param          *amgparam,
                      ILU_param          *iluparam,
                      SWZ_param          *swzparam);

void fasp_param_input_init (input_param *iniparam);

void fasp_param_amg_init (AMG_param *amgparam);

void fasp_param_solver_init (ITS_param *itsparam);

void fasp_param_ilu_init (ILU_param *iluparam);

void fasp_param_swz_init (SWZ_param *swzparam);

void fasp_param_amg_set (AMG_param          *param,
                         const input_param  *iniparam);

void fasp_param_ilu_set (ILU_param          *iluparam,
                         const input_param  *iniparam);

void fasp_param_swz_set (SWZ_param          *swzparam,
                         const input_param  *iniparam);

void fasp_param_solver_set (ITS_param          *itsparam,
                            const input_param  *iniparam);

void fasp_param_amg_to_prec (precond_data     *pcdata,
                             const AMG_param  *amgparam);

void fasp_param_prec_to_amg (AMG_param           *amgparam,
                             const precond_data  *pcdata);

void fasp_param_amg_to_precbsr (precond_data_bsr  *pcdata,
                                const AMG_param   *amgparam);

void fasp_param_precbsr_to_amg (AMG_param               *amgparam,
                                const precond_data_bsr  *pcdata);

void fasp_param_amg_print (const AMG_param *param);

void fasp_param_ilu_print (const ILU_param *param);

void fasp_param_swz_print (const SWZ_param *param);

void fasp_param_solver_print (const ITS_param *param);


/*-------- In file: AuxSort.c --------*/

INT fasp_aux_BiSearch (const INT   nlist,
                       const INT  *list,
                       const INT   value);

INT fasp_aux_unique (INT        numbers[],
                     const INT  size);

void fasp_aux_merge (INT  numbers[],
                     INT  work[],
                     INT  left,
                     INT  mid,
                     INT  right);

void fasp_aux_msort (INT  numbers[],
                     INT  work[],
                     INT  left,
                     INT  right);

void fasp_aux_iQuickSort (INT  *a,
                          INT   left,
                          INT   right);

void fasp_aux_dQuickSort (REAL  *a,
                          INT   left,
                          INT   right);

void fasp_aux_iQuickSortIndex (INT  *a,
                               INT   left,
                               INT   right,
                               INT  *index);

void fasp_aux_dQuickSortIndex (REAL  *a,
                               INT    left,
                               INT    right,
                               INT   *index);


/*-------- In file: AuxThreads.c --------*/

INT fasp_get_num_threads ( void );

INT fasp_set_num_threads (const INT nthreads);

void fasp_get_start_end (const INT  procid,
                         const INT  nprocs,
                         const INT  n,
                         INT       *start,
                         INT       *end);

void fasp_set_gs_threads (const INT mythreads,
                          const INT its);


/*-------- In file: AuxTiming.c --------*/

void fasp_gettime (REAL *time);


/*-------- In file: AuxVector.c --------*/

SHORT fasp_dvec_isnan (const dvector *u);

dvector fasp_dvec_create (const INT m);

ivector fasp_ivec_create (const INT m);

void fasp_dvec_alloc (const INT  m,
                      dvector   *u);

void fasp_ivec_alloc (const INT  m,
                      ivector   *u);

void fasp_dvec_free (dvector *u);

void fasp_ivec_free (ivector *u);

void fasp_dvec_rand (const INT  n,
                     dvector   *x);

void fasp_dvec_set (INT         n,
                    dvector    *x,
                    const REAL  val);

void fasp_ivec_set (INT        n,
                    ivector   *u,
                    const INT  m);

void fasp_dvec_cp (const dvector  *x,
                   dvector        *y);

REAL fasp_dvec_maxdiff (const dvector *x,
                        const dvector *y);

void fasp_dvec_symdiagscale (dvector        *b,
                             const dvector  *diag);


/*-------- In file: BlaArray.c --------*/

void fasp_blas_darray_ax (const INT    n,
                          const REAL   a,
                          REAL        *x);

void fasp_blas_darray_axpy (const INT    n,
                            const REAL   a,
                            const REAL  *x,
                            REAL        *y);

void fasp_blas_darray_axpy_nc2 (const REAL   a,
                                const REAL  *x,
                                REAL        *y);

void fasp_blas_darray_axpy_nc3 (const REAL   a,
                                const REAL  *x,
                                REAL        *y);

void fasp_blas_darray_axpy_nc5 (const REAL   a,
                                const REAL  *x,
                                REAL        *y);

void fasp_blas_darray_axpy_nc7 (const REAL   a,
                                const REAL  *x,
                                REAL        *y);

void fasp_blas_darray_axpyz (const INT    n,
                             const REAL   a,
                             const REAL  *x,
                             const REAL  *y,
                             REAL        *z);

void fasp_blas_darray_axpyz_nc2 (const REAL   a,
                                 const REAL  *x,
                                 const REAL  *y,
                                 REAL        *z);

void fasp_blas_darray_axpyz_nc3 (const REAL   a,
                                 const REAL  *x,
                                 const REAL  *y,
                                 REAL        *z);

void fasp_blas_darray_axpyz_nc5 (const REAL   a,
                                 const REAL  *x,
                                 const REAL  *y,
                                 REAL        *z);

void fasp_blas_darray_axpyz_nc7 (const REAL   a,
                                 const REAL  *x,
                                 const REAL  *y,
                                 REAL        *z);

void fasp_blas_darray_axpby (const INT   n,
                             const REAL  a,
                             const REAL *x,
                             const REAL  b,
                             REAL       *y);

REAL fasp_blas_darray_norm1 (const INT    n,
                             const REAL  *x);

REAL fasp_blas_darray_norm2 (const INT    n,
                             const REAL  *x);

REAL fasp_blas_darray_norminf (const INT    n,
                               const REAL  *x);

REAL fasp_blas_darray_dotprod (const INT    n,
                               const REAL  *x,
                               const REAL  *y);


/*-------- In file: BlaEigen.c --------*/

REAL fasp_dcsr_maxeig (const dCSRmat  *A,
                       const REAL      tol,
                       const INT       maxit);


/*-------- In file: BlaFormat.c --------*/

SHORT fasp_format_dcoo_dcsr (const dCOOmat  *A,
                             dCSRmat        *B);

SHORT fasp_format_dcsr_dcoo (const dCSRmat  *A,
                             dCOOmat        *B);

SHORT fasp_format_dstr_dcsr (const dSTRmat  *A,
                             dCSRmat        *B);

dCSRmat fasp_format_dblc_dcsr (const dBLCmat *Ab);

dCSRLmat * fasp_format_dcsrl_dcsr (const dCSRmat *A);

dCSRmat fasp_format_dbsr_dcsr (const dBSRmat *B);

dBSRmat fasp_format_dcsr_dbsr (const dCSRmat  *A,
                               const INT       nb);

dBSRmat fasp_format_dstr_dbsr (const dSTRmat *B);

dCOOmat * fasp_format_dbsr_dcoo (const dBSRmat *B);


/*-------- In file: BlaILU.c --------*/

void fasp_iluk (INT    n,
                REAL  *a,
                INT   *ja,
                INT   *ia,
                INT    lfil,
                REAL  *alu,
                INT   *jlu,
                INT    iwk,
                INT   *ierr,
                INT   *nzlu);

void fasp_ilut (INT    n,
                REAL  *a,
                INT   *ja,
                INT   *ia,
                INT    lfil,
                REAL   droptol,
                REAL  *alu,
                INT   *jlu,
                INT    iwk,
                INT   *ierr,
                INT   *nz);

void fasp_ilutp (INT    n,
                 REAL  *a,
                 INT   *ja,
                 INT   *ia,
                 INT    lfil,
                 REAL   droptol,
                 REAL   permtol,
                 INT    mbloc,
                 REAL  *alu,
                 INT   *jlu,
                 INT   *iperm,
                 INT    iwk,
                 INT   *ierr,
                 INT   *nz);

void fasp_symbfactor (INT   n,
                      INT  *colind,
                      INT  *rwptr,
                      INT   levfill,
                      INT   nzmax,
                      INT  *nzlu,
                      INT  *ijlu,
                      INT  *uptr,
                      INT  *ierr);


/*-------- In file: BlaILUSetupBSR.c --------*/

SHORT fasp_ilu_dbsr_setup (dBSRmat    *A,
                           ILU_data   *iludata,
                           ILU_param  *iluparam);

SHORT fasp_ilu_dbsr_setup_omp (dBSRmat    *A,
                               ILU_data   *iludata,
                               ILU_param  *iluparam);

SHORT fasp_ilu_dbsr_setup_levsch_omp (dBSRmat    *A,
                                      ILU_data   *iludata,
                                      ILU_param  *iluparam);

SHORT fasp_ilu_dbsr_setup_mc_omp (dBSRmat    *A,
                                  dCSRmat    *Ap,
                                  ILU_data   *iludata,
                                  ILU_param  *iluparam);


/*-------- In file: BlaILUSetupCSR.c --------*/

SHORT fasp_ilu_dcsr_setup (dCSRmat    *A,
                           ILU_data   *iludata,
                           ILU_param  *iluparam);


/*-------- In file: BlaILUSetupSTR.c --------*/

void fasp_ilu_dstr_setup0 (dSTRmat  *A,
                           dSTRmat  *LU);

void fasp_ilu_dstr_setup1 (dSTRmat  *A,
                           dSTRmat  *LU);


/*-------- In file: BlaIO.c --------*/

void fasp_dcsrvec_read1 (const char  *filename,
                         dCSRmat     *A,
                         dvector     *b);

void fasp_dcsrvec_read2 (const char  *filemat,
                         const char  *filerhs,
                         dCSRmat     *A,
                         dvector     *b);

void fasp_dcsr_read (const char  *filename,
                     dCSRmat     *A);

void fasp_dcoo_read (const char  *filename,
                     dCSRmat     *A);

void fasp_dcoo_read1 (const char  *filename,
                      dCOOmat     *A);

void fasp_dcoo_shift_read (const char  *filename,
                           dCSRmat     *A);

void fasp_dmtx_read (const char  *filename,
                     dCSRmat     *A);

void fasp_dmtxsym_read (const char  *filename,
                        dCSRmat     *A);

void fasp_dstr_read (const char  *filename,
                     dSTRmat     *A);

void fasp_dbsr_read (const char  *filename,
                     dBSRmat     *A);

void fasp_dvecind_read (const char  *filename,
                        dvector     *b);

void fasp_dvec_read (const char  *filename,
                     dvector     *b);

void fasp_ivecind_read (const char  *filename,
                        ivector     *b);

void fasp_ivec_read (const char  *filename,
                     ivector     *b);

void fasp_dcsrvec_write1 (const char  *filename,
                          dCSRmat     *A,
                          dvector     *b);

void fasp_dcsrvec_write2 (const char  *filemat,
                          const char  *filerhs,
                          dCSRmat     *A,
                          dvector     *b);

void fasp_dcoo_write (const char  *filename,
                      dCSRmat     *A);

void fasp_dstr_write (const char  *filename,
                      dSTRmat     *A);

void fasp_dbsr_write (const char *filename,
                      dBSRmat *A);

void fasp_dvec_write (const char  *filename,
                      dvector     *vec);

void fasp_dvecind_write (const char  *filename,
                         dvector     *vec);

void fasp_ivec_write (const char  *filename,
                      ivector     *vec);

void fasp_dvec_print (const INT  n,
                      dvector   *u);

void fasp_ivec_print (const INT  n,
                      ivector   *u);

void fasp_dcsr_print (const dCSRmat *A);

void fasp_dcoo_print (const dCOOmat *A);

void fasp_dbsr_print (const dBSRmat *A);

void fasp_dbsr_write_coo (const char    *filename,
                          const dBSRmat *A);

void fasp_dcsr_write_coo (const char    *filename,
                          const dCSRmat *A);

void fasp_dstr_print (const dSTRmat *A);

void fasp_matrix_read (const char  *filename,
                       void        *A);

void fasp_matrix_read_bin (const char *filename,
                           void       *A);

void fasp_matrix_write (const char *filename,
                        void       *A,
                        const INT   flag);

void fasp_vector_read (const char *filerhs,
                       void       *b);

void fasp_vector_write (const char *filerhs,
                        void       *b,
                        const INT   flag);

void fasp_hb_read (const char *input_file,
                   dCSRmat    *A,
                   dvector    *b);


/*-------- In file: BlaOrderingCSR.c --------*/

void fasp_dcsr_CMK_order (const dCSRmat *A,
                          INT           *order,
                          INT           *oindex);

void fasp_dcsr_RCMK_order (const dCSRmat *A,
                           INT           *order,
                           INT           *oindex,
                           INT           *rorder);


/*-------- In file: BlaSchwarzSetup.c --------*/

INT fasp_swz_dcsr_setup (SWZ_data   *swzdata,
                         SWZ_param  *swzparam);

void fasp_dcsr_swz_forward_smoother (SWZ_data   *swzdata,
                                     SWZ_param  *swzparam,
                                     dvector    *x,
                                     dvector    *b);

void fasp_dcsr_swz_backward_smoother (SWZ_data   *swzdata,
                                      SWZ_param  *swzparam,
                                      dvector    *x,
                                      dvector    *b);


/*-------- In file: BlaSmallMat.c --------*/

void fasp_blas_smat_axm (REAL       *a,
                         const INT   n,
                         const REAL  alpha);

void fasp_blas_smat_add (const REAL  *a,
                         const REAL  *b,
                         const INT    n,
                         const REAL   alpha,
                         const REAL   beta,
                         REAL        *c);

void fasp_blas_smat_mxv_nc2 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mxv_nc3 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mxv_nc5 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mxv_nc7 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mxv (const REAL  *a,
                         const REAL  *b,
                         REAL        *c,
                         const INT    n);

void fasp_blas_smat_mul_nc2 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mul_nc3 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mul_nc5 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mul_nc7 (const REAL  *a,
                             const REAL  *b,
                             REAL        *c);

void fasp_blas_smat_mul (const REAL  *a,
                         const REAL  *b,
                         REAL        *c,
                         const INT    n);

void fasp_blas_smat_ypAx_nc2 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ypAx_nc3 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ypAx_nc5 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ypAx_nc7 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ypAx (const REAL  *A,
                          const REAL  *x,
                          REAL        *y,
                          const INT    n);

void fasp_blas_smat_ymAx_nc2 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ymAx_nc3 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ymAx_nc5 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ymAx_nc7 (const REAL  *A,
                              const REAL  *x,
                              REAL        *y);

void fasp_blas_smat_ymAx (const REAL  *A,
                          const REAL  *x,
                          REAL        *y,
                          const INT    n);

void fasp_blas_smat_aAxpby (const REAL   alpha,
                            const REAL  *A,
                            const REAL  *x,
                            const REAL   beta,
                            REAL        *y,
                            const INT    n);


/*-------- In file: BlaSmallMatInv.c --------*/

void fasp_smat_inv_nc2 (REAL *a);

void fasp_smat_inv_nc3 (REAL *a);

void fasp_smat_inv_nc4 (REAL *a);

void fasp_smat_inv_nc5 (REAL *a);

void fasp_smat_inv_nc7 (REAL *a);

void fasp_smat_inv_nc (REAL      *a,
                       const INT  n);

void fasp_smat_invp_nc (REAL      *a,
                        const INT  n);

INT fasp_smat_inv (REAL      *a,
                   const INT  n);

REAL fasp_smat_Linf (const REAL  *A,
                     const INT    n);

void fasp_smat_identity_nc2 (REAL *a);

void fasp_smat_identity_nc3 (REAL *a);

void fasp_smat_identity_nc5 (REAL *a);

void fasp_smat_identity_nc7 (REAL *a);

void fasp_smat_identity (REAL      *a,
                         const INT  n,
                         const INT  n2);


/*-------- In file: BlaSmallMatLU.c --------*/

SHORT fasp_smat_lu_decomp (REAL       *A,
                           INT         pivot[],
                           const INT   n);

SHORT fasp_smat_lu_solve (const REAL  *A,
                          REAL         b[],
                          const INT    pivot[],
                          REAL         x[],
                          const INT    n);


/*-------- In file: BlaSparseBLC.c --------*/

void fasp_dblc_free (dBLCmat *A);


/*-------- In file: BlaSparseBSR.c --------*/

dBSRmat fasp_dbsr_create (const INT  ROW,
                          const INT  COL,
                          const INT  NNZ,
                          const INT  nb,
                          const INT  storage_manner);

void fasp_dbsr_alloc (const INT  ROW,
                      const INT  COL,
                      const INT  NNZ,
                      const INT  nb,
                      const INT  storage_manner,
                      dBSRmat   *A);

void fasp_dbsr_free (dBSRmat *A);

void fasp_dbsr_cp (const dBSRmat *A,
                   dBSRmat       *B);

INT fasp_dbsr_trans (const dBSRmat *A,
                     dBSRmat       *AT);

SHORT fasp_dbsr_getblk (const dBSRmat  *A,
                        const INT      *Is,
                        const INT      *Js,
                        const INT       m,
                        const INT       n,
                        dBSRmat        *B);

SHORT fasp_dbsr_diagpref (dBSRmat *A);

dvector fasp_dbsr_getdiaginv (const dBSRmat *A);

dBSRmat fasp_dbsr_diaginv (const dBSRmat *A);

dBSRmat fasp_dbsr_diaginv2 (const dBSRmat *A,
                            REAL          *diaginv);

dBSRmat fasp_dbsr_diaginv3 (const dBSRmat *A,
                            REAL          *diaginv);

dBSRmat fasp_dbsr_diaginv4 (const dBSRmat *A,
                            REAL          *diaginv);

void fasp_dbsr_getdiag (INT            n,
                        const dBSRmat *A,
                        REAL          *diag );

dBSRmat fasp_dbsr_diagLU (const dBSRmat *A,
                          REAL          *DL,
                          REAL          *DU);

dBSRmat fasp_dbsr_diagLU2 (dBSRmat *A,
                           REAL    *DL,
                           REAL    *DU);

dBSRmat fasp_dbsr_perm (const dBSRmat *A,
                        const INT     *P);

INT fasp_dbsr_merge_col (dBSRmat *A);


/*-------- In file: BlaSparseCOO.c --------*/

dCOOmat fasp_dcoo_create (const INT  m,
                          const INT  n,
                          const INT  nnz);

void fasp_dcoo_alloc (const INT  m,
                      const INT  n,
                      const INT  nnz,
                      dCOOmat   *A);

void fasp_dcoo_free (dCOOmat *A);

void fasp_dcoo_shift (dCOOmat   *A,
                      const INT  offset);


/*-------- In file: BlaSparseCSR.c --------*/

dCSRmat fasp_dcsr_create (const INT  m,
                          const INT  n,
                          const INT  nnz);

iCSRmat fasp_icsr_create (const INT  m,
                          const INT  n,
                          const INT  nnz);

void fasp_dcsr_alloc (const INT  m,
                      const INT  n,
                      const INT  nnz,
                      dCSRmat   *A);

void fasp_dcsr_free (dCSRmat *A);

void fasp_icsr_free (iCSRmat *A);

INT fasp_dcsr_bandwidth (const dCSRmat  *A);

dCSRmat fasp_dcsr_perm (dCSRmat *A,
                        INT     *P);

void fasp_dcsr_sort (dCSRmat *A);

SHORT fasp_dcsr_getblk (const dCSRmat  *A,
                        const INT      *Is,
                        const INT      *Js,
                        const INT       m,
                        const INT       n,
                        dCSRmat        *B);

void fasp_dcsr_getdiag (INT            n,
                        const dCSRmat *A,
                        dvector       *diag);

void fasp_dcsr_getcol (const INT      n,
                       const dCSRmat *A,
                       REAL          *col);

void fasp_dcsr_diagpref (dCSRmat *A);

SHORT fasp_dcsr_regdiag (dCSRmat    *A,
                         const REAL  value);

void fasp_icsr_cp (const iCSRmat *A,
                   iCSRmat       *B);

void fasp_dcsr_cp (const dCSRmat *A,
                   dCSRmat       *B);

void fasp_icsr_trans (const iCSRmat *A,
                      iCSRmat       *AT);

INT fasp_dcsr_trans (const dCSRmat *A,
                     dCSRmat       *AT);

void fasp_dcsr_transpose (INT   *row[2],
                          INT   *col[2],
                          REAL  *val[2],
                          INT   *nn,
                          INT   *tniz);

void fasp_dcsr_compress (const dCSRmat *A,
                         dCSRmat       *B,
                         const REAL     dtol);

SHORT fasp_dcsr_compress_inplace (dCSRmat    *A,
                                  const REAL  dtol);

void fasp_dcsr_shift (dCSRmat   *A,
                      const INT  offset);

void fasp_dcsr_symdiagscale (dCSRmat       *A,
                             const dvector *diag);

dCSRmat fasp_dcsr_sympart (dCSRmat *A);

void fasp_dcsr_multicoloring (dCSRmat *A,
                              INT     *flags,
                              INT     *groups);

void fasp_dcsr_transz (dCSRmat *A,
                       INT     *p,
                       dCSRmat *AT);

dCSRmat fasp_dcsr_permz (dCSRmat *A,
                         INT     *p);

void fasp_dcsr_sortz (dCSRmat      *A,
                      const SHORT   isym);


/*-------- In file: BlaSparseCSRL.c --------*/

dCSRLmat * fasp_dcsrl_create (const INT num_rows,
                              const INT num_cols,
                              const INT num_nonzeros);

void fasp_dcsrl_free (dCSRLmat *A);


/*-------- In file: BlaSparseCheck.c --------*/

INT fasp_check_diagpos (const dCSRmat *A);

SHORT fasp_check_diagzero (const dCSRmat *A);

INT fasp_check_diagdom (const dCSRmat *A);

INT fasp_check_symm (const dCSRmat *A);

void fasp_check_dCSRmat (const dCSRmat *A);

SHORT fasp_check_iCSRmat (const iCSRmat *A);


/*-------- In file: BlaSparseSTR.c --------*/

dSTRmat fasp_dstr_create (const INT  nx,
                          const INT  ny,
                          const INT  nz,
                          const INT  nc,
                          const INT  nband,
                          INT       *offsets);

void fasp_dstr_alloc (const INT  nx,
                      const INT  ny,
                      const INT  nz,
                      const INT  nxy,
                      const INT  ngrid,
                      const INT  nband,
                      const INT  nc,
                      INT       *offsets,
                      dSTRmat   *A);

void fasp_dstr_free (dSTRmat *A);

void fasp_dstr_cp (const dSTRmat *A,
                   dSTRmat       *B);


/*-------- In file: BlaSparseUtil.c --------*/

void fasp_sparse_abybms_ (INT *ia,
                          INT *ja,
                          INT *ib,
                          INT *jb,
                          INT *nap,
                          INT *map,
                          INT *mbp,
                          INT *ic,
                          INT *jc);

void fasp_sparse_abyb_ (INT  *ia,
                        INT  *ja,
                        REAL *a,
                        INT  *ib,
                        INT  *jb,
                        REAL *b,
                        INT  *nap,
                        INT  *map,
                        INT  *mbp,
                        INT  *ic,
                        INT  *jc,
                        REAL *c);

void fasp_sparse_iit_ (INT *ia,
                       INT *ja,
                       INT *na,
                       INT *ma,
                       INT *iat,
                       INT *jat);

void fasp_sparse_aat_ (INT  *ia,
                       INT  *ja,
                       REAL *a,
                       INT  *na,
                       INT  *ma,
                       INT  *iat,
                       INT  *jat,
                       REAL *at);

void fasp_sparse_aplbms_ (INT *ia,
                          INT *ja,
                          INT *ib,
                          INT *jb,
                          INT *nab,
                          INT *mab,
                          INT *ic,
                          INT *jc);

void fasp_sparse_aplusb_ (INT  *ia,
                          INT  *ja,
                          REAL *a,
                          INT  *ib,
                          INT  *jb,
                          REAL *b,
                          INT  *nab,
                          INT  *mab,
                          INT  *ic,
                          INT  *jc,
                          REAL *c);

void fasp_sparse_rapms_ (INT *ir,
                         INT *jr,
                         INT *ia,
                         INT *ja,
                         INT *ip,
                         INT *jp,
                         INT *nin,
                         INT *ncin,
                         INT *iac,
                         INT *jac,
                         INT *maxrout);

void fasp_sparse_wtams_ (INT *jw,
                         INT *ia,
                         INT *ja,
                         INT *nwp,
                         INT *map,
                         INT *jv,
                         INT *nvp,
                         INT *icp);

void fasp_sparse_wta_ (INT  *jw,
                       REAL *w,
                       INT  *ia,
                       INT  *ja,
                       REAL *a,
                       INT  *nwp,
                       INT  *map,
                       INT  *jv,
                       REAL *v,
                       INT  *nvp);

void fasp_sparse_ytxbig_ (INT  *jy,
                          REAL *y,
                          INT  *nyp,
                          REAL *x,
                          REAL *s);

void fasp_sparse_ytx_ (INT  *jy,
                       REAL *y,
                       INT  *jx,
                       REAL *x,
                       INT  *nyp,
                       INT  *nxp,
                       INT  *icp,
                       REAL *s);

void fasp_sparse_rapcmp_ (INT  *ir,
                          INT  *jr,
                          REAL *r,
                          INT  *ia,
                          INT  *ja,
                          REAL *a,
                          INT  *ipt,
                          INT  *jpt,
                          REAL *pt,
                          INT  *nin,
                          INT  *ncin,
                          INT  *iac,
                          INT  *jac,
                          REAL *ac,
                          INT  *idummy);

ivector fasp_sparse_mis (dCSRmat *A);


/*-------- In file: BlaSpmvBLC.c --------*/

void fasp_blas_dblc_aAxpy (const REAL      alpha,
                           const dBLCmat  *A,
                           const REAL     *x,
                           REAL           *y);

void fasp_blas_dblc_mxv (const dBLCmat  *A,
                         const REAL     *x,
                         REAL           *y);


/*-------- In file: BlaSpmvBSR.c --------*/

void fasp_blas_dbsr_axm (dBSRmat     *A,
                         const REAL   alpha);

void fasp_blas_dbsr_aAxpby (const REAL   alpha,
                            dBSRmat     *A,
                            REAL        *x,
                            const REAL   beta,
                            REAL        *y );

void fasp_blas_dbsr_aAxpy (const REAL      alpha,
                           const dBSRmat  *A,
                           const REAL     *x,
                           REAL           *y);

void fasp_blas_dbsr_aAxpy_agg (const REAL      alpha,
                               const dBSRmat  *A,
                               const REAL     *x,
                               REAL           *y);

void fasp_blas_dbsr_mxv (const dBSRmat  *A,
                         const REAL     *x,
                         REAL           *y);

void fasp_blas_dbsr_mxv_agg (const dBSRmat  *A,
                             const REAL     *x,
                             REAL           *y);

void fasp_blas_dbsr_mxm (const dBSRmat  *A,
                         const dBSRmat  *B,
                         dBSRmat        *C);

void fasp_blas_dbsr_rap1 (const dBSRmat  *R,
                          const dBSRmat  *A,
                          const dBSRmat  *P,
                          dBSRmat        *B);

void fasp_blas_dbsr_rap (const dBSRmat  *R,
                         const dBSRmat  *A,
                         const dBSRmat  *P,
                         dBSRmat        *B);

void fasp_blas_dbsr_rap_agg (const dBSRmat  *R,
                             const dBSRmat  *A,
                             const dBSRmat  *P,
                             dBSRmat        *B);


/*-------- In file: BlaSpmvCSR.c --------*/

SHORT fasp_blas_dcsr_add (const dCSRmat  *A,
                          const REAL      alpha,
                          const dCSRmat  *B,
                          const REAL      beta,
                          dCSRmat        *C);

void fasp_blas_dcsr_axm (dCSRmat     *A,
                         const REAL   alpha);

void fasp_blas_dcsr_mxv (const dCSRmat  *A,
                         const REAL     *x,
                         REAL           *y);

void fasp_blas_dcsr_mxv_agg (const dCSRmat  *A,
                             const REAL     *x,
                             REAL           *y);

void fasp_blas_dcsr_aAxpy (const REAL      alpha,
                           const dCSRmat  *A,
                           const REAL     *x,
                           REAL           *y);

void fasp_blas_dcsr_aAxpy_agg (const REAL      alpha,
                               const dCSRmat  *A,
                               const REAL     *x,
                               REAL           *y);

REAL fasp_blas_dcsr_vmv (const dCSRmat  *A,
                         const REAL     *x,
                         const REAL     *y);

void fasp_blas_dcsr_mxm (const dCSRmat  *A,
                         const dCSRmat  *B,
                         dCSRmat        *C);

void fasp_blas_dcsr_rap (const dCSRmat  *R,
                         const dCSRmat  *A,
                         const dCSRmat  *P,
                         dCSRmat        *RAP);

void fasp_blas_dcsr_rap_agg (const dCSRmat  *R,
                             const dCSRmat  *A,
                             const dCSRmat  *P,
                             dCSRmat        *RAP);

void fasp_blas_dcsr_rap_agg1 (const dCSRmat  *R,
                              const dCSRmat  *A,
                              const dCSRmat  *P,
                              dCSRmat        *B);

void fasp_blas_dcsr_ptap (const dCSRmat  *Pt,
                          const dCSRmat  *A,
                          const dCSRmat  *P,
                          dCSRmat        *Ac);

dCSRmat fasp_blas_dcsr_rap2 (INT    *ir,
                             INT    *jr,
                             REAL   *r,
                             INT    *ia,
                             INT    *ja,
                             REAL   *a,
                             INT    *ipt,
                             INT    *jpt,
                             REAL   *pt,
                             INT     n,
                             INT     nc,
                             INT    *maxrpout,
                             INT    *ipin,
                             INT    *jpin);

void fasp_blas_dcsr_rap4 (dCSRmat   *R,
                          dCSRmat   *A,
                          dCSRmat   *P,
                          dCSRmat   *B,
                          INT       *icor_ysk);


/*-------- In file: BlaSpmvCSRL.c --------*/

void fasp_blas_dcsrl_mxv (const dCSRLmat  *A,
                          const REAL      *x,
                          REAL            *y);


/*-------- In file: BlaSpmvSTR.c --------*/

void fasp_blas_dstr_aAxpy (const REAL      alpha,
                           const dSTRmat  *A,
                           const REAL     *x,
                           REAL           *y);

void fasp_blas_dstr_mxv (const dSTRmat  *A,
                         const REAL     *x,
                         REAL           *y);

INT fasp_blas_dstr_diagscale (const dSTRmat  *A,
                              dSTRmat        *B);


/*-------- In file: BlaVector.c --------*/

void fasp_blas_dvec_axpy (const REAL     a,
                          const dvector *x,
                          dvector       *y);

void fasp_blas_dvec_axpyz (const REAL     a,
                           const dvector *x,
                           const dvector *y,
                           dvector       *z);

REAL fasp_blas_dvec_norm1 (const dvector *x);

REAL fasp_blas_dvec_norm2 (const dvector *x);

REAL fasp_blas_dvec_norminf (const dvector *x);

REAL fasp_blas_dvec_dotprod (const dvector *x,
                             const dvector *y);

REAL fasp_blas_dvec_relerr (const dvector *x,
                            const dvector *y);


/*-------- In file: ItrSmootherBSR.c --------*/

void fasp_smoother_dbsr_jacobi (dBSRmat *A,
                                dvector *b,
                                dvector *u);

void fasp_smoother_dbsr_jacobi_setup (dBSRmat *A,
                                      REAL    *diaginv);

void fasp_smoother_dbsr_jacobi1 (dBSRmat *A,
                                 dvector *b,
                                 dvector *u,
                                 REAL    *diaginv);

void fasp_smoother_dbsr_gs (dBSRmat *A,
                            dvector *b,
                            dvector *u,
                            INT      order,
                            INT     *mark );

void fasp_smoother_dbsr_gs1 (dBSRmat *A,
                             dvector *b,
                             dvector *u,
                             INT      order,
                             INT     *mark,
                             REAL    *diaginv);

void fasp_smoother_dbsr_gs_ascend (dBSRmat *A,
                                   dvector *b,
                                   dvector *u,
                                   REAL    *diaginv);

void fasp_smoother_dbsr_gs_ascend1 (dBSRmat *A,
                                    dvector *b,
                                    dvector *u);

void fasp_smoother_dbsr_gs_descend (dBSRmat *A,
                                    dvector *b,
                                    dvector *u,
                                    REAL    *diaginv );

void fasp_smoother_dbsr_gs_descend1 (dBSRmat *A,
                                     dvector *b,
                                     dvector *u);

void fasp_smoother_dbsr_gs_order1 (dBSRmat *A,
                                   dvector *b,
                                   dvector *u,
                                   REAL    *diaginv,
                                   INT     *mark);

void fasp_smoother_dbsr_gs_order2 (dBSRmat *A,
                                   dvector *b,
                                   dvector *u,
                                   INT     *mark,
                                   REAL    *work);

void fasp_smoother_dbsr_sor (dBSRmat *A,
                             dvector *b,
                             dvector *u,
                             INT      order,
                             INT     *mark,
                             REAL     weight);

void fasp_smoother_dbsr_sor1 (dBSRmat *A,
                              dvector *b,
                              dvector *u,
                              INT      order,
                              INT     *mark,
                              REAL    *diaginv,
                              REAL     weight);

void fasp_smoother_dbsr_sor_ascend (dBSRmat *A,
                                    dvector *b,
                                    dvector *u,
                                    REAL    *diaginv,
                                    REAL     weight);

void fasp_smoother_dbsr_sor_descend (dBSRmat *A,
                                     dvector *b,
                                     dvector *u,
                                     REAL    *diaginv,
                                     REAL     weight);

void fasp_smoother_dbsr_sor_order (dBSRmat *A,
                                   dvector *b,
                                   dvector *u,
                                   REAL    *diaginv,
                                   INT     *mark,
                                   REAL     weight);

void fasp_smoother_dbsr_ilu (dBSRmat *A,
                             dvector *b,
                             dvector *x,
                             void    *data);


/*-------- In file: ItrSmootherCSR.c --------*/

void fasp_smoother_dcsr_jacobi (dvector    *u,
                                const INT   i_1,
                                const INT   i_n,
                                const INT   s,
                                dCSRmat    *A,
                                dvector    *b,
                                INT         L,
                                const REAL  w);

void fasp_smoother_dcsr_gs (dvector    *u,
                            const INT   i_1,
                            const INT   i_n,
                            const INT   s,
                            dCSRmat    *A,
                            dvector    *b,
                            INT         L);

void fasp_smoother_dcsr_gs_cf (dvector   *u,
                               dCSRmat   *A,
                               dvector   *b,
                               INT        L,
                               INT       *mark,
                               const INT  order);

void fasp_smoother_dcsr_sgs (dvector *u,
                             dCSRmat *A,
                             dvector *b,
                             INT      L);

void fasp_smoother_dcsr_sor (dvector    *u,
                             const INT   i_1,
                             const INT   i_n,
                             const INT   s,
                             dCSRmat    *A,
                             dvector    *b,
                             INT         L,
                             const REAL  w);

void fasp_smoother_dcsr_sor_cf (dvector    *u,
                                dCSRmat    *A,
                                dvector    *b,
                                INT         L,
                                const REAL  w,
                                INT        *mark,
                                const INT   order );

void fasp_smoother_dcsr_ilu (dCSRmat *A,
                             dvector *b,
                             dvector *x,
                             void    *data);

void fasp_smoother_dcsr_kaczmarz (dvector    *u,
                                  const INT   i_1,
                                  const INT   i_n,
                                  const INT   s,
                                  dCSRmat    *A,
                                  dvector    *b,
                                  INT         L,
                                  const REAL  w);

void fasp_smoother_dcsr_L1diag (dvector    *u,
                                const INT   i_1,
                                const INT   i_n,
                                const INT   s,
                                dCSRmat    *A,
                                dvector    *b,
                                INT         L);


/*-------- In file: ItrSmootherCSRcr.c --------*/

void fasp_smoother_dcsr_gscr (INT   pt,
                              INT   n,
                              REAL *u,
                              INT  *ia,
                              INT  *ja,
                              REAL *a,
                              REAL *b, 
                              INT   L,
                              INT  *CF);


/*-------- In file: ItrSmootherCSRpoly.c --------*/

void fasp_smoother_dcsr_poly (dCSRmat *Amat, 
                              dvector *brhs, 
                              dvector *usol, 
                              INT      n,
                              INT      ndeg,
                              INT      L);

void fasp_smoother_dcsr_poly_old (dCSRmat *Amat, 
                                  dvector *brhs, 
                                  dvector *usol, 
                                  INT      n,
                                  INT      ndeg,
                                  INT      L);


/*-------- In file: ItrSmootherSTR.c --------*/

void fasp_smoother_dstr_jacobi (dSTRmat *A, 
                                dvector *b, 
                                dvector *u);

void fasp_smoother_dstr_jacobi1 (dSTRmat *A, 
                                 dvector *b, 
                                 dvector *u, 
                                 REAL    *diaginv);

void fasp_smoother_dstr_gs (dSTRmat    *A,
                            dvector    *b,
                            dvector    *u,
                            const INT   order,
                            INT        *mark);

void fasp_smoother_dstr_gs1 (dSTRmat    *A,
                             dvector    *b,
                             dvector    *u,
                             const INT   order,
                             INT        *mark,
                             REAL       *diaginv);

void fasp_smoother_dstr_gs_ascend (dSTRmat *A, 
                                   dvector *b,
                                   dvector *u, 
                                   REAL    *diaginv);

void fasp_smoother_dstr_gs_descend (dSTRmat *A, 
                                    dvector *b, 
                                    dvector *u, 
                                    REAL    *diaginv);

void fasp_smoother_dstr_gs_order (dSTRmat *A, 
                                  dvector *b, 
                                  dvector *u,
                                  REAL    *diaginv,
                                  INT     *mark);

void fasp_smoother_dstr_gs_cf (dSTRmat    *A,
                               dvector    *b,
                               dvector    *u,
                               REAL       *diaginv,
                               INT        *mark,
                               const INT   order);

void fasp_smoother_dstr_sor (dSTRmat    *A,
                             dvector    *b,
                             dvector    *u,
                             const INT   order,
                             INT        *mark,
                             const REAL  weight);

void fasp_smoother_dstr_sor1 (dSTRmat    *A,
                              dvector    *b,
                              dvector    *u,
                              const INT   order,
                              INT        *mark,
                              REAL       *diaginv,
                              const REAL  weight);

void fasp_smoother_dstr_sor_ascend (dSTRmat *A,
                                    dvector *b,
                                    dvector *u,
                                    REAL    *diaginv,
                                    REAL     weight);

void fasp_smoother_dstr_sor_descend (dSTRmat *A, 
                                     dvector *b, 
                                     dvector *u, 
                                     REAL    *diaginv,
                                     REAL     weight);

void fasp_smoother_dstr_sor_order (dSTRmat *A, 
                                   dvector *b,
                                   dvector *u, 
                                   REAL    *diaginv,
                                   INT     *mark,
                                   REAL     weight);

void fasp_smoother_dstr_sor_cf (dSTRmat    *A,
                                dvector    *b,
                                dvector    *u,
                                REAL       *diaginv,
                                INT        *mark,
                                const INT   order,
                                const REAL  weight);

void fasp_generate_diaginv_block (dSTRmat *A, 
                                  ivector *neigh, 
                                  dvector *diaginv, 
                                  ivector *pivot);

void fasp_smoother_dstr_swz (dSTRmat *A, 
                             dvector *b,
                             dvector *u,
                             dvector *diaginv,
                             ivector *pivot,
                             ivector *neigh,
                             ivector *order);


/*-------- In file: KryPbcgs.c --------*/

INT fasp_solver_dcsr_pbcgs (dCSRmat     *A,
                            dvector     *b,
                            dvector     *u,
                            precond     *pc,
                            const REAL   tol,
                            const INT    MaxIt,
                            const SHORT  StopType,
                            const SHORT  PrtLvl);

INT fasp_solver_dbsr_pbcgs (dBSRmat     *A,
                            dvector     *b,
                            dvector     *u,
                            precond     *pc,
                            const REAL   tol,
                            const INT    MaxIt,
                            const SHORT  StopType,
                            const SHORT  PrtLvl);

INT fasp_solver_dblc_pbcgs (dBLCmat     *A,
                            dvector     *b,
                            dvector     *u,
                            precond     *pc,
                            const REAL   tol,
                            const INT    MaxIt,
                            const SHORT  StopType,
                            const SHORT  PrtLvl);

INT fasp_solver_dstr_pbcgs (dSTRmat     *A,
                            dvector     *b,
                            dvector     *u,
                            precond     *pc,
                            const REAL   tol,
                            const INT    MaxIt,
                            const SHORT  StopType,
                            const SHORT  PrtLvl);

INT fasp_solver_pbcgs (mxv_matfree *mf,
                       dvector     *b,
                       dvector     *u,
                       precond     *pc,
                       const REAL   tol,
                       const INT    MaxIt,
                       const SHORT  StopType,
                       const SHORT  PrtLvl);


/*-------- In file: KryPcg.c --------*/

INT fasp_solver_dcsr_pcg (dCSRmat     *A,
                          dvector     *b,
                          dvector     *u,
                          precond     *pc,
                          const REAL   tol,
                          const INT    MaxIt,
                          const SHORT  StopType,
                          const SHORT  PrtLvl);

INT fasp_solver_dbsr_pcg (dBSRmat     *A,
                          dvector     *b,
                          dvector     *u,
                          precond     *pc,
                          const REAL   tol,
                          const INT    MaxIt,
                          const SHORT  StopType,
                          const SHORT  PrtLvl);

INT fasp_solver_dblc_pcg (dBLCmat     *A,
                          dvector     *b,
                          dvector     *u,
                          precond     *pc,
                          const REAL   tol,
                          const INT    MaxIt,
                          const SHORT  StopType,
                          const SHORT  PrtLvl);

INT fasp_solver_dstr_pcg (dSTRmat     *A,
                          dvector     *b,
                          dvector     *u,
                          precond     *pc,
                          const REAL   tol,
                          const INT    MaxIt,
                          const SHORT  StopType,
                          const SHORT  PrtLvl);

INT fasp_solver_pcg (mxv_matfree *mf,
                     dvector     *b,
                     dvector     *u,
                     precond     *pc,
                     const REAL   tol,
                     const INT    MaxIt,
                     const SHORT  StopType,
                     const SHORT  PrtLvl);


/*-------- In file: KryPgcg.c --------*/

INT fasp_solver_dcsr_pgcg (dCSRmat     *A,
                           dvector     *b,
                           dvector     *u,
                           precond     *pc,
                           const REAL   tol,
                           const INT    MaxIt,
                           const SHORT  StopType,
                           const SHORT  PrtLvl);

INT fasp_solver_pgcg (mxv_matfree *mf,
                      dvector     *b,
                      dvector     *u,
                      precond     *pc,
                      const REAL   tol,
                      const INT    MaxIt,
                      const SHORT  StopType,
                      const SHORT  PrtLvl);


/*-------- In file: KryPgcr.c --------*/

INT fasp_solver_dcsr_pgcr (dCSRmat     *A,
                           dvector     *b,
                           dvector     *x,
                           precond     *pc,
                           const REAL   tol,
                           const INT    MaxIt,
                           const SHORT  restart,
                           const SHORT  StopType,
                           const SHORT  PrtLvl);

INT fasp_solver_dblc_pgcr (dBLCmat     *A,
                           dvector     *b,
                           dvector     *x,
                           precond     *pc,
                           const REAL   tol,
                           const INT    MaxIt,
                           const SHORT  restart,
                           const SHORT  StopType,
                           const SHORT  PrtLvl);


/*-------- In file: KryPgmres.c --------*/

INT fasp_solver_dcsr_pgmres (dCSRmat     *A,
                             dvector     *b,
                             dvector     *x,
                             precond     *pc,
                             const REAL   tol,
                             const INT    MaxIt,
                             const SHORT  restart,
                             const SHORT  StopType,
                             const SHORT  PrtLvl);

INT fasp_solver_dbsr_pgmres (dBSRmat     *A,
                             dvector     *b,
                             dvector     *x,
                             precond     *pc,
                             const REAL   tol,
                             const INT    MaxIt,
                             const SHORT  restart,
                             const SHORT  StopType,
                             const SHORT  PrtLvl);

INT fasp_solver_dblc_pgmres (dBLCmat     *A,
                             dvector     *b,
                             dvector     *x,
                             precond     *pc,
                             const REAL   tol,
                             const INT    MaxIt,
                             const SHORT  restart,
                             const SHORT  StopType,
                             const SHORT  PrtLvl);

INT fasp_solver_dstr_pgmres (dSTRmat     *A,
                             dvector     *b,
                             dvector     *x,
                             precond     *pc,
                             const REAL   tol,
                             const INT    MaxIt,
                             const SHORT  restart,
                             const SHORT  StopType,
                             const SHORT  PrtLvl);

INT fasp_solver_pgmres (mxv_matfree  *mf,
                        dvector      *b,
                        dvector      *x,
                        precond      *pc,
                        const REAL    tol,
                        const INT     MaxIt,
                        const SHORT   restart,
                        const SHORT   StopType,
                        const SHORT   PrtLvl);


/*-------- In file: KryPminres.c --------*/

INT fasp_solver_dcsr_pminres (dCSRmat      *A,
                              dvector      *b,
                              dvector      *u,
                              precond      *pc,
                              const REAL    tol,
                              const INT     MaxIt,
                              const SHORT   StopType,
                              const SHORT   PrtLvl);

INT fasp_solver_dblc_pminres (dBLCmat     *A,
                              dvector     *b,
                              dvector     *u,
                              precond     *pc,
                              const REAL   tol,
                              const INT    MaxIt,
                              const SHORT  StopType,
                              const SHORT  PrtLvl);

INT fasp_solver_dstr_pminres (dSTRmat      *A,
                              dvector      *b,
                              dvector      *u,
                              precond      *pc,
                              const REAL    tol,
                              const INT     MaxIt,
                              const SHORT   StopType,
                              const SHORT   PrtLvl);

INT fasp_solver_pminres (mxv_matfree  *mf,
                         dvector      *b,
                         dvector      *u,
                         precond      *pc,
                         const REAL    tol,
                         const INT     MaxIt,
                         const SHORT   StopType,
                         const SHORT   PrtLvl);


/*-------- In file: KryPvfgmres.c --------*/

INT fasp_solver_dcsr_pvfgmres (dCSRmat      *A,
                               dvector      *b,
                               dvector      *x,
                               precond      *pc,
                               const REAL    tol,
                               const INT     MaxIt,
                               const SHORT   restart,
                               const SHORT   StopType,
                               const SHORT   PrtLvl);

INT fasp_solver_dbsr_pvfgmres (dBSRmat      *A,
                               dvector      *b,
                               dvector      *x,
                               precond      *pc,
                               const REAL    tol,
                               const INT     MaxIt,
                               const SHORT   restart,
                               const SHORT   StopType,
                               const SHORT   PrtLvl);

INT fasp_solver_dblc_pvfgmres (dBLCmat     *A,
                               dvector     *b,
                               dvector     *x,
                               precond     *pc,
                               const REAL   tol,
                               const INT    MaxIt,
                               const SHORT  restart,
                               const SHORT  StopType,
                               const SHORT  PrtLvl);

INT fasp_solver_pvfgmres (mxv_matfree  *mf,
                          dvector      *b,
                          dvector      *x,
                          precond      *pc,
                          const REAL    tol,
                          const INT     MaxIt,
                          const SHORT   restart,
                          const SHORT   StopType,
                          const SHORT   PrtLvl);


/*-------- In file: KryPvgmres.c --------*/

INT fasp_solver_dcsr_pvgmres (dCSRmat      *A,
                              dvector      *b,
                              dvector      *x,
                              precond      *pc,
                              const REAL    tol,
                              const INT     MaxIt,
                              const SHORT   restart,
                              const SHORT   StopType,
                              const SHORT   PrtLvl);

INT fasp_solver_dbsr_pvgmres (dBSRmat      *A,
                              dvector      *b,
                              dvector      *x,
                              precond      *pc,
                              const REAL    tol,
                              const INT     MaxIt,
                              const SHORT   restart,
                              const SHORT   StopType,
                              const SHORT   PrtLvl);

INT fasp_solver_dblc_pvgmres (dBLCmat     *A,
                              dvector     *b,
                              dvector     *x,
                              precond     *pc,
                              const REAL   tol,
                              const INT    MaxIt,
                              const SHORT  restart,
                              const SHORT  StopType,
                              const SHORT  PrtLvl);

INT fasp_solver_dstr_pvgmres (dSTRmat      *A,
                              dvector      *b,
                              dvector      *x,
                              precond      *pc,
                              const REAL    tol,
                              const INT     MaxIt,
                              const SHORT   restart,
                              const SHORT   StopType,
                              const SHORT   PrtLvl);

INT fasp_solver_pvgmres (mxv_matfree  *mf,
                         dvector      *b,
                         dvector      *x,
                         precond      *pc,
                         const REAL    tol,
                         const INT     MaxIt,
                         SHORT         restart,
                         const SHORT   StopType,
                         const SHORT   PrtLvl);


/*-------- In file: KrySPbcgs.c --------*/

INT fasp_solver_dcsr_spbcgs (const dCSRmat  *A,
                             const dvector  *b,
                             dvector        *u,
                             precond        *pc,
                             const REAL      tol,
                             const INT       MaxIt,
                             const SHORT     StopType,
                             const SHORT     PrtLvl);

INT fasp_solver_dbsr_spbcgs (const dBSRmat  *A,
                             const dvector  *b,
                             dvector        *u,
                             precond        *pc,
                             const REAL      tol,
                             const INT       MaxIt,
                             const SHORT     StopType,
                             const SHORT     PrtLvl);

INT fasp_solver_dblc_spbcgs (const dBLCmat  *A,
                             const dvector  *b,
                             dvector        *u,
                             precond        *pc,
                             const REAL      tol,
                             const INT       MaxIt,
                             const SHORT     StopType,
                             const SHORT     PrtLvl);

INT fasp_solver_dstr_spbcgs (const dSTRmat  *A,
                             const dvector  *b,
                             dvector        *u,
                             precond        *pc,
                             const REAL      tol,
                             const INT       MaxIt,
                             const SHORT     StopType,
                             const SHORT     PrtLvl);


/*-------- In file: KrySPcg.c --------*/

INT fasp_solver_dcsr_spcg (const dCSRmat  *A,
                           const dvector  *b,
                           dvector        *u,
                           precond        *pc,
                           const REAL      tol,
                           const INT       MaxIt,
                           const SHORT     StopType,
                           const SHORT     PrtLvl);

INT fasp_solver_dblc_spcg (const dBLCmat  *A,
                           const dvector  *b,
                           dvector        *u,
                           precond        *pc,
                           const REAL      tol,
                           const INT       MaxIt,
                           const SHORT     StopType,
                           const SHORT     PrtLvl);

INT fasp_solver_dstr_spcg (const dSTRmat  *A,
                           const dvector  *b,
                           dvector        *u,
                           precond        *pc,
                           const REAL      tol,
                           const INT       MaxIt,
                           const SHORT     StopType,
                           const SHORT     PrtLvl);


/*-------- In file: KrySPgmres.c --------*/

INT fasp_solver_dcsr_spgmres (const dCSRmat  *A,
                              const dvector  *b,
                              dvector        *x,
                              precond        *pc,
                              const REAL      tol,
                              const INT       MaxIt,
                              SHORT           restart,
                              const SHORT     StopType,
                              const SHORT     PrtLvl);

INT fasp_solver_dbsr_spgmres (const dBSRmat  *A,
                              const dvector  *b,
                              dvector        *x,
                              precond        *pc,
                              const REAL      tol,
                              const INT       MaxIt,
                              SHORT           restart,
                              const SHORT     StopType,
                              const SHORT     PrtLvl);

INT fasp_solver_dblc_spgmres (const dBLCmat  *A,
                              const dvector  *b,
                              dvector        *x,
                              precond        *pc,
                              const REAL      tol,
                              const INT       MaxIt,
                              SHORT           restart,
                              const SHORT     StopType,
                              const SHORT     PrtLvl);

INT fasp_solver_dstr_spgmres (const dSTRmat  *A,
                              const dvector  *b,
                              dvector        *x,
                              precond        *pc,
                              const REAL      tol,
                              const INT       MaxIt,
                              SHORT           restart,
                              const SHORT     StopType,
                              const SHORT     PrtLvl);


/*-------- In file: KrySPminres.c --------*/

INT fasp_solver_dcsr_spminres (const dCSRmat  *A,
                               const dvector  *b,
                               dvector        *u,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);

INT fasp_solver_dblc_spminres (const dBLCmat  *A,
                               const dvector  *b,
                               dvector        *u,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);

INT fasp_solver_dstr_spminres (const dSTRmat  *A,
                               const dvector  *b,
                               dvector        *u,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);


/*-------- In file: KrySPvgmres.c --------*/

INT fasp_solver_dcsr_spvgmres (const dCSRmat  *A,
                               const dvector  *b,
                               dvector        *x,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               SHORT           restart,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);

INT fasp_solver_dbsr_spvgmres (const dBSRmat  *A,
                               const dvector  *b,
                               dvector        *x,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               SHORT           restart,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);

INT fasp_solver_dblc_spvgmres (const dBLCmat  *A,
                               const dvector  *b,
                               dvector        *x,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               SHORT           restart,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);

INT fasp_solver_dstr_spvgmres (const dSTRmat  *A,
                               const dvector  *b,
                               dvector        *x,
                               precond        *pc,
                               const REAL      tol,
                               const INT       MaxIt,
                               SHORT           restart,
                               const SHORT     StopType,
                               const SHORT     PrtLvl);


/*-------- In file: PreAMGCoarsenCR.c --------*/

INT fasp_amg_coarsening_cr (const INT   i_0,
                            const INT   i_n,
                            dCSRmat    *A,
                            ivector    *vertices,
                            AMG_param  *param);


/*-------- In file: PreAMGCoarsenRS.c --------*/

SHORT fasp_amg_coarsening_rs (dCSRmat    *A,
                              ivector    *vertices,
                              dCSRmat    *P,
                              iCSRmat    *S,
                              AMG_param  *param);


/*-------- In file: PreAMGInterp.c --------*/

void fasp_amg_interp (dCSRmat    *A,
                      ivector    *vertices,
                      dCSRmat    *P,
                      iCSRmat    *S,
                      AMG_param  *param);


/*-------- In file: PreAMGInterpEM.c --------*/

void fasp_amg_interp_em (dCSRmat    *A,
                         ivector    *vertices,
                         dCSRmat    *P,
                         AMG_param  *param);


/*-------- In file: PreAMGSetupCR.c --------*/

SHORT fasp_amg_setup_cr (AMG_data   *mgl,
                         AMG_param  *param);


/*-------- In file: PreAMGSetupRS.c --------*/

SHORT fasp_amg_setup_rs (AMG_data   *mgl,
                         AMG_param  *param);


/*-------- In file: PreAMGSetupSA.c --------*/

SHORT fasp_amg_setup_sa (AMG_data   *mgl,
                         AMG_param  *param);


/*-------- In file: PreAMGSetupSABSR.c --------*/

SHORT fasp_amg_setup_sa_bsr (AMG_data_bsr  *mgl,
                             AMG_param     *param);


/*-------- In file: PreAMGSetupUA.c --------*/

SHORT fasp_amg_setup_ua (AMG_data   *mgl,
                         AMG_param  *param);


/*-------- In file: PreAMGSetupUABSR.c --------*/

SHORT fasp_amg_setup_ua_bsr (AMG_data_bsr  *mgl,
                             AMG_param     *param);


/*-------- In file: PreBLC.c --------*/

void fasp_precond_block_diag_3 (REAL *r,
                                REAL *z,
                                void *data);

void fasp_precond_block_diag_3_amg (REAL *r,
                                    REAL *z,
                                    void *data);

void fasp_precond_block_diag_4 (REAL *r,
                                REAL *z,
                                void *data);

void fasp_precond_block_lower_3 (REAL *r,
                                 REAL *z,
                                 void *data);

void fasp_precond_block_lower_3_amg (REAL *r,
                                     REAL *z,
                                     void *data);

void fasp_precond_block_lower_4 (REAL *r,
                                 REAL *z,
                                 void *data);

void fasp_precond_block_upper_3 (REAL *r,
                                 REAL *z,
                                 void *data);

void fasp_precond_block_upper_3_amg (REAL *r,
                                     REAL *z,
                                     void *data);

void fasp_precond_block_SGS_3 (REAL *r,
                               REAL *z,
                               void *data);

void fasp_precond_block_SGS_3_amg (REAL *r,
                                   REAL *z,
                                   void *data);

void fasp_precond_sweeping (REAL *r,
                            REAL *z,
                            void *data);


/*-------- In file: PreBSR.c --------*/

void fasp_precond_dbsr_diag (REAL *r,
                             REAL *z,
                             void *data);

void fasp_precond_dbsr_diag_nc2 (REAL *r,
                                 REAL *z,
                                 void *data);

void fasp_precond_dbsr_diag_nc3 (REAL *r,
                                 REAL *z,
                                 void *data);

void fasp_precond_dbsr_diag_nc5 (REAL *r,
                                 REAL *z,
                                 void *data);

void fasp_precond_dbsr_diag_nc7 (REAL *r, 
                                 REAL *z,
                                 void *data);

void fasp_precond_dbsr_ilu (REAL *r, 
                            REAL *z,
                            void *data);

void fasp_precond_dbsr_ilu_mc_omp (REAL *r, 
                                   REAL *z,
                                   void *data);

void fasp_precond_dbsr_ilu_ls_omp (REAL *r,
                                   REAL *z,
                                   void *data);

void fasp_precond_dbsr_amg (REAL *r, 
                            REAL *z,
                            void *data);

void fasp_precond_dbsr_namli (REAL *r, 
                              REAL *z,
                              void *data);

void fasp_precond_dbsr_amg_nk (REAL *r,
                               REAL *z,
                               void *data);


/*-------- In file: PreCSR.c --------*/

precond *fasp_precond_setup (const SHORT   precond_type,
                             AMG_param    *amgparam,
                             ILU_param    *iluparam,
                             dCSRmat      *A);

void fasp_precond_diag (REAL *r, 
                        REAL *z, 
                        void *data);

void fasp_precond_ilu (REAL *r, 
                       REAL *z, 
                       void *data);

void fasp_precond_ilu_forward (REAL *r, 
                               REAL *z, 
                               void *data);

void fasp_precond_ilu_backward (REAL *r, 
                                REAL *z, 
                                void *data);

void fasp_precond_swz (REAL *r,
                       REAL *z,
                       void *data);

void fasp_precond_amg (REAL *r, 
                       REAL *z, 
                       void *data);

void fasp_precond_famg (REAL *r, 
                        REAL *z, 
                        void *data);

void fasp_precond_amli (REAL *r, 
                        REAL *z, 
                        void *data);

void fasp_precond_namli (REAL *r, 
                         REAL *z,
                         void *data);

void fasp_precond_amg_nk (REAL *r,
                          REAL *z,
                          void *data);

void fasp_precond_free (const SHORT   precond_type,
                        precond      *pc);


/*-------- In file: PreDataInit.c --------*/

void fasp_precond_data_init (precond_data *pcdata);

AMG_data * fasp_amg_data_create (SHORT max_levels);

void fasp_amg_data_free (AMG_data   *mgl,
                         AMG_param  *param);

AMG_data_bsr * fasp_amg_data_bsr_create (SHORT max_levels);

void fasp_amg_data_bsr_free (AMG_data_bsr *mgl);

void fasp_ilu_data_create (const INT   iwk,
                           const INT   nwork,
                           ILU_data   *iludata);

void fasp_ilu_data_free (ILU_data *iludata);

void fasp_swz_data_free (SWZ_data *swzdata);


/*-------- In file: PreMGCycle.c --------*/

void fasp_solver_mgcycle (AMG_data   *mgl,
                          AMG_param  *param);

void fasp_solver_mgcycle_bsr (AMG_data_bsr  *mgl,
                              AMG_param     *param);


/*-------- In file: PreMGCycleFull.c --------*/

void fasp_solver_fmgcycle (AMG_data   *mgl,
                           AMG_param  *param);


/*-------- In file: PreMGRecur.c --------*/

void fasp_solver_mgrecur (AMG_data   *mgl,
                          AMG_param  *param,
                          INT         level);


/*-------- In file: PreMGRecurAMLI.c --------*/

void fasp_solver_amli (AMG_data   *mgl,
                       AMG_param  *param,
                       INT         level);

void fasp_solver_namli (AMG_data   *mgl,
                        AMG_param  *param,
                        INT         level,
                        INT         num_levels);

void fasp_solver_namli_bsr (AMG_data_bsr  *mgl,
                            AMG_param     *param,
                            INT            level,
                            INT            num_levels);

void fasp_amg_amli_coef (const REAL  lambda_max,
                         const REAL  lambda_min,
                         const INT   degree,
                         REAL       *coef);


/*-------- In file: PreMGSolve.c --------*/

INT fasp_amg_solve (AMG_data   *mgl,
                    AMG_param  *param);

INT fasp_amg_solve_amli (AMG_data   *mgl,
                         AMG_param  *param);

INT fasp_amg_solve_namli (AMG_data   *mgl,
                          AMG_param  *param);

void fasp_famg_solve (AMG_data   *mgl,
                      AMG_param  *param);


/*-------- In file: PreSTR.c --------*/

void fasp_precond_dstr_diag (REAL *r, 
                             REAL *z, 
                             void *data);

void fasp_precond_dstr_ilu0 (REAL *r, 
                             REAL *z, 
                             void *data);

void fasp_precond_dstr_ilu1 (REAL *r, 
                             REAL *z, 
                             void *data);

void fasp_precond_dstr_ilu0_forward (REAL *r, 
                                     REAL *z, 
                                     void *data);

void fasp_precond_dstr_ilu0_backward (REAL *r, 
                                      REAL *z, 
                                      void *data);

void fasp_precond_dstr_ilu1_forward (REAL *r, 
                                     REAL *z, 
                                     void *data);

void fasp_precond_dstr_ilu1_backward (REAL *r, 
                                      REAL *z, 
                                      void *data);

void fasp_precond_dstr_blockgs (REAL *r, 
                                REAL *z, 
                                void *data);


/*-------- In file: SolAMG.c --------*/

void fasp_solver_amg (const dCSRmat  *A,
                      const dvector  *b,
                      dvector        *x,
                      AMG_param      *param);


/*-------- In file: SolBLC.c --------*/

INT fasp_solver_dblc_itsolver (dBLCmat    *A,
                               dvector    *b,
                               dvector    *x,
                               precond    *pc,
                               ITS_param  *itparam);

INT fasp_solver_dblc_krylov (dBLCmat    *A,
                             dvector    *b,
                             dvector    *x,
                             ITS_param  *itparam);

INT fasp_solver_dblc_krylov_block_3 (dBLCmat    *A,
                                     dvector    *b,
                                     dvector    *x,
                                     ITS_param  *itparam,
                                     AMG_param  *amgparam,
                                     dCSRmat    *A_diag);

INT fasp_solver_dblc_krylov_block_4 (dBLCmat    *A,
                                     dvector    *b,
                                     dvector    *x,
                                     ITS_param  *itparam,
                                     AMG_param  *amgparam,
                                     dCSRmat    *A_diag);

INT fasp_solver_dblc_krylov_sweeping (dBLCmat    *A,
                                      dvector    *b,
                                      dvector    *x,
                                      ITS_param  *itparam,
                                      INT         NumLayers,
                                      dBLCmat    *Ai,
                                      dCSRmat    *local_A,
                                      ivector    *local_index);


/*-------- In file: SolBSR.c --------*/

INT fasp_solver_dbsr_itsolver (dBSRmat    *A,
                               dvector    *b,
                               dvector    *x,
                               precond    *pc,
                               ITS_param  *itparam);

INT fasp_solver_dbsr_krylov (dBSRmat    *A,
                             dvector    *b,
                             dvector    *x,
                             ITS_param  *itparam);

INT fasp_solver_dbsr_krylov_diag (dBSRmat    *A,
                                  dvector    *b,
                                  dvector    *x,
                                  ITS_param  *itparam);

INT fasp_solver_dbsr_krylov_ilu (dBSRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 ITS_param  *itparam,
                                 ILU_param  *iluparam);

INT fasp_solver_dbsr_krylov_amg (dBSRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 ITS_param  *itparam,
                                 AMG_param  *amgparam);

INT fasp_solver_dbsr_krylov_amg_nk (dBSRmat    *A,
                                    dvector    *b,
                                    dvector    *x,
                                    ITS_param  *itparam,
                                    AMG_param  *amgparam,
                                    dCSRmat    *A_nk,
                                    dCSRmat    *P_nk,
                                    dCSRmat    *R_nk);

INT fasp_solver_dbsr_krylov_nk_amg (dBSRmat    *A,
                                    dvector    *b,
                                    dvector    *x,
                                    ITS_param  *itparam,
                                    AMG_param  *amgparam,
                                    const INT   nk_dim,
                                    dvector    *nk);


/*-------- In file: SolCSR.c --------*/

INT fasp_solver_dcsr_itsolver (dCSRmat    *A,
                               dvector    *b,
                               dvector    *x,
                               precond    *pc,
                               ITS_param  *itparam);

INT fasp_solver_dcsr_itsolver_s (dCSRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 precond    *pc,
                                 ITS_param  *itparam);

INT fasp_solver_dcsr_krylov (dCSRmat    *A,
                             dvector    *b,
                             dvector    *x,
                             ITS_param  *itparam);

INT fasp_solver_dcsr_krylov_s (dCSRmat    *A,
                               dvector    *b,
                               dvector    *x,
                               ITS_param  *itparam);

INT fasp_solver_dcsr_krylov_diag (dCSRmat    *A,
                                  dvector    *b,
                                  dvector    *x,
                                  ITS_param  *itparam);

INT fasp_solver_dcsr_krylov_swz (dCSRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 ITS_param  *itparam,
                                 SWZ_param  *schparam);

INT fasp_solver_dcsr_krylov_amg (dCSRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 ITS_param  *itparam,
                                 AMG_param  *amgparam);

INT fasp_solver_dcsr_krylov_ilu (dCSRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 ITS_param  *itparam,
                                 ILU_param  *iluparam);

INT fasp_solver_dcsr_krylov_ilu_M (dCSRmat    *A,
                                   dvector    *b,
                                   dvector    *x,
                                   ITS_param  *itparam,
                                   ILU_param  *iluparam,
                                   dCSRmat    *M);

INT fasp_solver_dcsr_krylov_amg_nk (dCSRmat    *A,
                                    dvector    *b,
                                    dvector    *x,
                                    ITS_param  *itparam,
                                    AMG_param  *amgparam,
                                    dCSRmat    *A_nk,
                                    dCSRmat    *P_nk,
                                    dCSRmat    *R_nk);


/*-------- In file: SolFAMG.c --------*/

void fasp_solver_famg (const dCSRmat  *A,
                       const dvector  *b,
                       dvector        *x,
                       AMG_param      *param);


/*-------- In file: SolGMGPoisson.c --------*/

INT fasp_poisson_gmg1d (REAL         *u,
                        REAL         *b,
                        const INT     nx,
                        const INT     maxlevel,
                        const REAL    rtol,
                        const SHORT   prtlvl);

INT fasp_poisson_gmg2d (REAL         *u,
                        REAL         *b,
                        const INT     nx,
                        const INT     ny,
                        const INT     maxlevel,
                        const REAL    rtol,
                        const SHORT   prtlvl);

INT fasp_poisson_gmg3d (REAL         *u,
                        REAL         *b,
                        const INT     nx,
                        const INT     ny,
                        const INT     nz,
                        const INT     maxlevel,
                        const REAL    rtol,
                        const SHORT   prtlvl);

void fasp_poisson_fgmg1d (REAL         *u,
                          REAL         *b,
                          const INT     nx,
                          const INT     maxlevel,
                          const REAL    rtol,
                          const SHORT   prtlvl);

void fasp_poisson_fgmg2d (REAL         *u,
                          REAL         *b,
                          const INT     nx,
                          const INT     ny,
                          const INT     maxlevel,
                          const REAL    rtol,
                          const SHORT   prtlvl);

void fasp_poisson_fgmg3d (REAL         *u,
                          REAL         *b,
                          const INT     nx,
                          const INT     ny,
                          const INT     nz,
                          const INT     maxlevel,
                          const REAL    rtol,
                          const SHORT   prtlvl);

INT fasp_poisson_gmgcg1d (REAL         *u,
                          REAL         *b,
                          const INT     nx,
                          const INT     maxlevel,
                          const REAL    rtol,
                          const SHORT   prtlvl);

INT fasp_poisson_gmgcg2d (REAL         *u,
                          REAL         *b,
                          const INT     nx,
                          const INT     ny,
                          const INT     maxlevel,
                          const REAL    rtol,
                          const SHORT   prtlvl);

INT fasp_poisson_gmgcg3d (REAL         *u,
                          REAL         *b,
                          const INT     nx,
                          const INT     ny,
                          const INT     nz,
                          const INT     maxlevel,
                          const REAL    rtol,
                          const SHORT   prtlvl);


/*-------- In file: SolMatFree.c --------*/

INT fasp_solver_itsolver (mxv_matfree  *mf,
                          dvector      *b,
                          dvector      *x,
                          precond      *pc,
                          ITS_param    *itparam);

INT fasp_solver_krylov (mxv_matfree  *mf,
                        dvector      *b,
                        dvector      *x,
                        ITS_param    *itparam);

void fasp_solver_matfree_init (INT           matrix_format,
                               mxv_matfree  *mf,
                               void         *A);


/*-------- In file: SolSTR.c --------*/

INT fasp_solver_dstr_itsolver (dSTRmat    *A,
                               dvector    *b,
                               dvector    *x,
                               precond    *pc,
                               ITS_param  *itparam);

INT fasp_solver_dstr_krylov (dSTRmat    *A,
                             dvector    *b,
                             dvector    *x,
                             ITS_param  *itparam);

INT fasp_solver_dstr_krylov_diag (dSTRmat    *A,
                                  dvector    *b,
                                  dvector    *x,
                                  ITS_param  *itparam);

INT fasp_solver_dstr_krylov_ilu (dSTRmat    *A,
                                 dvector    *b,
                                 dvector    *x,
                                 ITS_param  *itparam,
                                 ILU_param  *iluparam);

INT fasp_solver_dstr_krylov_blockgs (dSTRmat    *A,
                                     dvector    *b,
                                     dvector    *x,
                                     ITS_param  *itparam,
                                     ivector    *neigh,
                                     ivector    *order);


/*-------- In file: SolWrapper.c --------*/

void fasp_fwrapper_amg_ (INT  *n,
                         INT  *nnz,
                         INT  *ia,
                         INT  *ja,
                         REAL *a,
                         REAL *b,
                         REAL *u,
                         REAL *tol,
                         INT  *maxit,
                         INT  *ptrlvl);

void fasp_fwrapper_krylov_ilu_ (INT  *n,
                                INT  *nnz,
                                INT  *ia,
                                INT  *ja,
                                REAL *a,
                                REAL *b,
                                REAL *u,
                                REAL *tol,
                                INT  *maxit,
                                INT  *ptrlvl);

void fasp_fwrapper_krylov_amg_ (INT  *n,
                                INT  *nnz,
                                INT  *ia,
                                INT  *ja,
                                REAL *a,
                                REAL *b,
                                REAL *u,
                                REAL *tol,
                                INT  *maxit,
                                INT  *ptrlvl);

INT fasp_wrapper_dbsr_krylov_amg (INT   n,
                                  INT   nnz,
                                  INT   nb,
                                  INT  *ia,
                                  INT  *ja,
                                  REAL *a,
                                  REAL *b,
                                  REAL *u,
                                  REAL  tol,
                                  INT   maxit,
                                  INT   ptrlvl);

INT fasp_wrapper_dcoo_dbsr_krylov_amg (INT   n,
                                       INT   nnz,
                                       INT   nb,
                                       INT  *ia,
                                       INT  *ja,
                                       REAL *a,
                                       REAL *b,
                                       REAL *u,
                                       REAL  tol,
                                       INT   maxit,
                                       INT   ptrlvl);


/*-------- In file: XtrMumps.c --------*/

int fasp_solver_mumps (dCSRmat *ptrA,
                       dvector *b,
                       dvector *u,
                       const SHORT prtlvl);

int fasp_solver_mumps_steps (dCSRmat *ptrA,
                             dvector *b,
                             dvector *u,
                             Mumps_data *mumps);

Mumps_data fasp_mumps_factorize (dCSRmat *ptrA,
                                 dvector *b,
                                 dvector *u,
                                 const SHORT prtlvl);

void fasp_mumps_solve (dCSRmat *ptrA,
                       dvector *b,
                       dvector *u,
                       Mumps_data mumps,
                       const SHORT prtlvl);

void fasp_mumps_free (Mumps_data *mumps);


/*-------- In file: XtrPardiso.c --------*/

INT fasp_solver_pardiso (dCSRmat * ptrA,
                         dvector *b,
                         dvector *u,
                         const SHORT prtlvl);

INT fasp_pardiso_factorize (dCSRmat *ptrA,
                            Pardiso_data *pdata,
                            const SHORT prtlvl);

INT fasp_pardiso_solve (dCSRmat *ptrA,
                        dvector *b,
                        dvector *u,
                        Pardiso_data *pdata,
                        const SHORT prtlvl);

INT fasp_pardiso_free_internal_mem (Pardiso_data *pdata);


/*-------- In file: XtrSamg.c --------*/

void dvector2SAMGInput (dvector *vec,
                        char *filename);

INT dCSRmat2SAMGInput (dCSRmat *A,
                       char *filefrm,
                       char *fileamg);


/*-------- In file: XtrSuperlu.c --------*/

int fasp_solver_superlu (dCSRmat *ptrA,
                         dvector *b,
                         dvector *u,
                         const SHORT prtlvl);


/*-------- In file: XtrUmfpack.c --------*/

INT fasp_solver_umfpack (dCSRmat *ptrA,
                         dvector *b,
                         dvector *u,
                         const SHORT prtlvl);

void* fasp_umfpack_factorize (dCSRmat *ptrA,
                              const SHORT prtlvl);

INT fasp_umfpack_solve (dCSRmat *ptrA,
                        dvector *b,
                        dvector *u,
                        void *Numeric,
                        const SHORT prtlvl);

INT fasp_umfpack_free_numeric (void *Numeric);

 
/* End of fasp_functs.h */
